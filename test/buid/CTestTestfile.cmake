# CMake generated Testfile for 
# Source directory: C:/opengl/test
# Build directory: C:/opengl/test/buid
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(foo-test "C:/opengl/test/buid/Debug/pass.exe")
  set_tests_properties(foo-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;26;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(foo-test "C:/opengl/test/buid/Release/pass.exe")
  set_tests_properties(foo-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;26;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(foo-test "C:/opengl/test/buid/MinSizeRel/pass.exe")
  set_tests_properties(foo-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;26;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(foo-test "C:/opengl/test/buid/RelWithDebInfo/pass.exe")
  set_tests_properties(foo-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;26;add_test;C:/opengl/test/CMakeLists.txt;0;")
else()
  add_test(foo-test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(bar-test "C:/opengl/test/buid/Debug/fail.exe")
  set_tests_properties(bar-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;29;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(bar-test "C:/opengl/test/buid/Release/fail.exe")
  set_tests_properties(bar-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;29;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(bar-test "C:/opengl/test/buid/MinSizeRel/fail.exe")
  set_tests_properties(bar-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;29;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(bar-test "C:/opengl/test/buid/RelWithDebInfo/fail.exe")
  set_tests_properties(bar-test PROPERTIES  _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;29;add_test;C:/opengl/test/CMakeLists.txt;0;")
else()
  add_test(bar-test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(baz-test "C:/opengl/test/buid/Debug/fail.exe" "Fail is not fail.")
  set_tests_properties(baz-test PROPERTIES  PASS_REGULAR_EXPRESSION "Fail is not fail." _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;32;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(baz-test "C:/opengl/test/buid/Release/fail.exe" "Fail is not fail.")
  set_tests_properties(baz-test PROPERTIES  PASS_REGULAR_EXPRESSION "Fail is not fail." _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;32;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(baz-test "C:/opengl/test/buid/MinSizeRel/fail.exe" "Fail is not fail.")
  set_tests_properties(baz-test PROPERTIES  PASS_REGULAR_EXPRESSION "Fail is not fail." _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;32;add_test;C:/opengl/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(baz-test "C:/opengl/test/buid/RelWithDebInfo/fail.exe" "Fail is not fail.")
  set_tests_properties(baz-test PROPERTIES  PASS_REGULAR_EXPRESSION "Fail is not fail." _BACKTRACE_TRIPLES "C:/opengl/test/CMakeLists.txt;32;add_test;C:/opengl/test/CMakeLists.txt;0;")
else()
  add_test(baz-test NOT_AVAILABLE)
endif()
